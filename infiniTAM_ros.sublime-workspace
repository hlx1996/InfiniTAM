{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"image",
				"imageQueue"
			],
			[
				"mesh",
				"meshes"
			],
			[
				"visua",
				"visualize_mesh"
			],
			[
				"_vie",
				"_viewFrustum_max"
			],
			[
				"_min",
				"_viewFrustum_min"
			],
			[
				"tim",
				"time_1"
			],
			[
				"row",
				"row_idx"
			],
			[
				"z",
				"Zero"
			],
			[
				"ve",
				"vel_con_num"
			],
			[
				"max",
				"maxVel"
			],
			[
				"QP",
				"QPSolution"
			],
			[
				"_max",
				"_max_z_id"
			],
			[
				"index",
				"index_1_med"
			],
			[
				"Po",
				"polytopeCluster_gpu"
			],
			[
				"cuda",
				"cudaPolytopeGeneration"
			],
			[
				"maP",
				"map_data"
			],
			[
				"uni",
				"uint8_t"
			],
			[
				"ra",
				"rand_pt"
			],
			[
				"Ve",
				"Vector3d"
			],
			[
				"sca",
				"scale_factor"
			],
			[
				"scal",
				"scale_n"
			],
			[
				"inde",
				"index2Coord"
			],
			[
				"Q",
				"Q_v_z"
			],
			[
				"timeset",
				"time_set_funnel_state_1"
			],
			[
				"pos",
				"posList"
			],
			[
				"fu",
				"funnel_data"
			],
			[
				"coor",
				"coord_funnel"
			],
			[
				"funn",
				"funnel_size"
			],
			[
				"fun",
				"funnel_size"
			],
			[
				"st",
				"step"
			],
			[
				"test",
				"test_index"
			],
			[
				"map",
				"map_data"
			],
			[
				"opt",
				"_opt_margin"
			],
			[
				"ctrl",
				"ctrl_num"
			],
			[
				"ROS",
				"ROS_ERROR"
			],
			[
				"V",
				"Vector3d"
			],
			[
				"dec",
				"decomp_cvx_space"
			],
			[
				"const",
				"constraints"
			],
			[
				"contr",
				"constraints"
			],
			[
				"min",
				"min_x"
			],
			[
				"seed",
				"seed_pts"
			],
			[
				"get",
				"getConvexPoly"
			],
			[
				"copy",
				"copyTime"
			],
			[
				"time_s",
				"time_seq_2"
			],
			[
				"corrid",
				"corridor_1"
			],
			[
				"cop",
				"copyTime"
			],
			[
				"re",
				"return"
			],
			[
				"polytope",
				"polytopeConnectFullCheck"
			],
			[
				"corri",
				"corridor_2"
			],
			[
				"res",
				"reserve"
			],
			[
				"pre",
				"pre_index"
			],
			[
				"cur",
				"cur_index"
			],
			[
				"cur_inde",
				"cur_index_index"
			],
			[
				"plt",
				"pltp_num"
			],
			[
				"pltp",
				"pltp1"
			],
			[
				"time",
				"time_2"
			],
			[
				"plane",
				"plane_num_2"
			],
			[
				"plane_num_",
				"plane_num_1"
			],
			[
				"corr",
				"corridor"
			],
			[
				"R",
				"ROS_WARN"
			],
			[
				"RO",
				"ROS_BREAK"
			],
			[
				"is",
				"is_deg"
			],
			[
				"loop",
				"loop_final_heu"
			],
			[
				"id",
				"id_y"
			],
			[
				"id_",
				"id_y"
			],
			[
				"kin_",
				"_kino_path_finder"
			],
			[
				"map_",
				"map_yz_size"
			],
			[
				"vert",
				"vertices"
			],
			[
				"sed",
				"seed_coord"
			],
			[
				"coord",
				"coord_num"
			],
			[
				"poly",
				"poly_num"
			],
			[
				"fix_",
				"fix_coord_set"
			],
			[
				"Ki",
				"kinoPath"
			],
			[
				"polyh",
				"polyhedrons"
			],
			[
				"pts",
				"pts_cnt"
			],
			[
				"visBe",
				"visBezierCtrlPoints"
			],
			[
				"P",
				"Publisher"
			],
			[
				"stat",
				"static_cast"
			],
			[
				"sta",
				"static_cast"
			],
			[
				"time_in",
				"time_in_heuristic"
			],
			[
				"e",
				"endif"
			],
			[
				"use",
				"use_aug_map"
			],
			[
				"cor",
				"cornorPts"
			],
			[
				"inf",
				"inf_x"
			],
			[
				"if",
				"inf_x"
			],
			[
				"col",
				"collisionCheck"
			],
			[
				"ret",
				"return"
			],
			[
				"coordC",
				"coordCenter"
			],
			[
				"coorC",
				"coordCorner"
			],
			[
				"vec",
				"vector\tstd::vector"
			],
			[
				"_end",
				"_end_pt"
			],
			[
				"dura",
				"durations"
			],
			[
				"ls",
				"lst_t"
			],
			[
				"clus",
				"cluster_grid_buffer"
			],
			[
				"segm",
				"segment_num"
			],
			[
				"s1",
				"s1d1CtrlP_num"
			],
			[
				"seedP",
				"seed_pt"
			],
			[
				"Poly",
				"Polytope"
			],
			[
				"Co",
				"corridor"
			],
			[
				"pr",
				"printPlanes"
			],
			[
				"kino",
				"kinoPath"
			],
			[
				"verte3",
				"vertices3D"
			],
			[
				"pl",
				"planes"
			],
			[
				"targe",
				"target_id"
			],
			[
				"canda",
				"candidate_grid_num"
			],
			[
				"d_can_can",
				"d_can_can_clu_result"
			],
			[
				"ac",
				"active_xyz_id"
			],
			[
				"Vec",
				"Vector3d"
			],
			[
				"outs",
				"cube_outside_grid_x"
			],
			[
				"tmp",
				"tmp_x"
			],
			[
				"thr",
				"_thr_num"
			],
			[
				"ver3d",
				"vertices3d"
			],
			[
				"ver",
				"vertices_num"
			],
			[
				"par",
				"para_comp_num"
			],
			[
				"pa",
				"para_comp_num"
			],
			[
				"_has",
				"_has_vertex"
			],
			[
				"tes",
				"testCDD"
			],
			[
				"gr",
				"grid_num"
			],
			[
				"idx",
				"idx_tmp"
			],
			[
				"vert3",
				"vertices3D"
			],
			[
				"verte",
				"vertices_num"
			],
			[
				"pu",
				"push_back"
			],
			[
				"pla",
				"plane_fcn"
			],
			[
				"nor",
				"normal"
			],
			[
				"vertex",
				"vertex_num"
			],
			[
				"hre",
				"hrep"
			],
			[
				"vetit",
				"vertices_test"
			],
			[
				"Ma",
				"MatrixXd"
			]
		]
	},
	"buffers":
	[
		{
			"file": "/home/bbgf/catkin_ws/src/gpu_convex_planner/src/gpu_convex_demo.cpp",
			"settings":
			{
				"buffer_size": 68899,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "/home/bbgf/catkin_ws/src/gpu_convex_planner/include/planning/hybrid_a_star.h",
			"settings":
			{
				"buffer_size": 7312,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/home/bbgf/catkin_ws/src/gpu_convex_planner/src/cluster_engine_cpu.cpp",
			"settings":
			{
				"buffer_size": 3996,
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/RosWrappedMain.cpp",
			"settings":
			{
				"buffer_size": 12489,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "launch/depth_input_demo.launch",
			"settings":
			{
				"buffer_size": 723,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "calib.txt",
			"settings":
			{
				"buffer_size": 325,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "/home/bbgf/catkin_ws/src/sgbm_ros/src/sgbm_ros.cu",
			"settings":
			{
				"buffer_size": 10009,
				"line_ending": "Unix"
			}
		}
	],
	"build_system": "",
	"build_system_choices":
	[
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 92.0,
		"last_filter": "install",
		"selected_items":
		[
			[
				"install",
				"Package Control: Install Package"
			],
			[
				"Package Control: ",
				"Package Control: Add Repository"
			],
			[
				"Package Contr",
				"Package Control: List Packages"
			],
			[
				"Package Control: sftd",
				"Package Control: Satisfy Dependencies"
			],
			[
				"sublimeclang settings",
				"Preferences: SublimeClang Settings – User"
			],
			[
				"Package Control: remo",
				"Package Control: Remove Package"
			],
			[
				"Package Control: install",
				"Package Control: Install Package"
			],
			[
				"Package Control: re",
				"Package Control: Remove Package"
			],
			[
				"Package Control: insta",
				"Package Control: Install Package"
			],
			[
				"Package Control: ins",
				"Package Control: Install Package"
			],
			[
				"packa",
				"Preferences: Browse Packages"
			],
			[
				"sublimeclang se",
				"Preferences: SublimeClang Settings – User"
			]
		],
		"width": 449.0
	},
	"console":
	{
		"height": 223.0,
		"history":
		[
			"import urllib.request,os,hashlib; h = '6f4c264a24d933ce70df5dedcf1dcaee' + 'ebe013ee18cced0ef93d5f746d80ef60'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://packagecontrol.io/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by)",
			"import urllib.request,os;pf = 'Package Control.sublime-package';ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) );open(os.path.join(ipp, pf), 'wb').write(urllib.request.urlopen( 'http://sublime.wbond.net/' + pf.replace(' ','%20')).read())",
			"import urllib,os; pf='Package Control.sublime-package'; ipp=sublime.installed_packages_path(); os.makedirs(ipp) if not os.path.exists(ipp) else None; urllib.install_opener(urllib.build_opener(urllib.ProxyHandler())); open(os.path.join(ipp,pf),'wb').write(urllib.urlopen('http://sublime.wbond.net/'+pf.replace(' ','%20')).read()); print('Please restart Sublime Text to finish installation')",
			"urllib.request.install_opener( urllib.request.build_opener( urllib.request.Pr",
			"ipp = sublime.installed_packages_path(); ",
			"pf = 'Package Control.sublime-package';",
			"import urllib.request,os;",
			"import urllib,os; pf='Package Control.sublime-package'; ipp=sublime.installed_packages_path(); os.makedirs(ipp) if not os.path.exists(ipp) else None; urllib.install_opener(urllib.build_opener(urllib.ProxyHandler())); open(os.path.join(ipp,pf),'wb').write(urllib.urlopen('http://sublime.wbond.net/'+pf.replace(' ','%20')).read()); print('Please restart Sublime Text to finish installation')",
			"import urllib,os; pf='Package Control.sublime-package'; ipp=sublime.installed_packages_path(); os.makedirs(ipp) if not os.path.exists(ipp) else None; urllib2.install_opener(urllib2.build_opener(urllib2.ProxyHandler())); open(os.path.join(ipp,pf),'wb').write(urllib2.urlopen('http://sublime.wbond.net/'+pf.replace(' ','%20')).read()); print('Please restart Sublime Text to finish installation')",
			"try:",
			"import urllib2,os; pf='Package Control.sublime-package'; ipp=sublime.installed_packages_path(); os.makedirs(ipp) if not os.path.exists(ipp) else None; urllib2.install_opener(urllib2.build_opener(urllib2.ProxyHandler())); open(os.path.join(ipp,pf),'wb').write(urllib2.urlopen('http://sublime.wbond.net/'+pf.replace(' ','%20')).read()); print('Please restart Sublime Text to finish installation')",
			"mport urllib.request,os,hashlib; h = '7183a2d3e96f11eeadd761d777e62404' + 'e330c659d4bb41d3bdf022e94cab3cd0'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://sublime.wbond.net/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by)",
			"import urllib.request,os,hashlib; h = '2915d1851351e5ee549c20394736b442' + '8bc59f460fa1548d1514676163dafc88'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://packagecontrol.io/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by)",
			"import urllib.request,os,hashlib; h = '7183a2d3e96f11eeadd761d777e62404' + 'e330c659d4bb41d3bdf022e94cab3cd0'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://sublime.wbond.net/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by)",
			"import urllib.request,os,hashlib; h = '2915d1851351e5ee549c20394736b442' + '8bc59f460fa1548d1514676163dafc88'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://packagecontrol.io/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by)",
			"install "
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/home/bbgf/catkin_ws/src/InfiniTAM_ros",
		"/home/bbgf/catkin_ws/src/InfiniTAM_ros/launch",
		"/home/bbgf/catkin_ws/src/InfiniTAM_ros/libs",
		"/home/bbgf/catkin_ws/src/InfiniTAM_ros/libs/ITMLib",
		"/home/bbgf/catkin_ws/src/InfiniTAM_ros/src"
	],
	"file_history":
	[
		"/home/bbgf/software/opencv-3.4.5/samples/cpp/stereo_calib.cpp",
		"/home/bbgf/catkin_ws/src/depthnet/src/depthnet_node.cpp",
		"/home/bbgf/catkin_ws/src/teach_repeat_planer/src/teach_and_repeat.sublime-project",
		"/home/bbgf/catkin_ws/src/psm_node/CMakeLists.txt",
		"/home/bbgf/catkin_ws/src/psm_node/scipts/psm_pynode.py",
		"/home/bbgf/catkin_ws/src/psm_node/launch/visensor.launch",
		"/home/bbgf/catkin_ws/src/InfiniTAM_ros/launch/depth_input_demo.launch",
		"/home/bbgf/catkin_ws/src/depthnet/launch/wlq_launch.launch",
		"/home/bbgf/catkin_ws/src/depthnet/python/depthNet_class.py",
		"/home/bbgf/catkin_ws/src/depthnet/python/depthNet_model.py",
		"/home/bbgf/catkin_ws/src/InfiniTAM_ros/calib.txt",
		"/home/bbgf/catkin_ws/dense_mapping_data/25001498_camera_calib.yaml",
		"/home/bbgf/catkin_ws/src/planner/pcd_trajectory/src/trajectory_generator_waypoint.cpp",
		"/home/bbgf/Desktop/sgbm_ros/src/sgbm_ros.cu",
		"/home/bbgf/catkin_ws/src/cv_bridge/CMakeLists.txt",
		"/home/bbgf/catkin_ws/src/sgbm_ros/CMakeLists.txt",
		"/home/bbgf/cv_bridge/CMakeLists.txt",
		"/home/bbgf/catkin_ws/src/depthnet/launch/low_resolution.launch",
		"/home/bbgf/catkin_ws/src/depthnet/src/ros_main.cpp",
		"/home/bbgf/catkin_ws/src/depthnet/CMakeLists.txt",
		"/home/bbgf/catkin_ws/src/sgbm_ros/src/sgbm_ros.cpp",
		"/home/bbgf/catkin_ws/src/sgbm_ros/src/sgbm_ros.cu",
		"/home/bbgf/catkin_ws/src/sgbm_ros/include/sgbm_ros/transport_util.h",
		"/home/bbgf/catkin_ws/src/depthnet/src/depthnet_node.h",
		"/home/bbgf/catkin_ws/src/depthnet/src/DepthFusion/device_image.cuh",
		"/home/bbgf/catkin_ws/src/depthnet/src/DepthFusion/cuda_exception.cuh",
		"/home/bbgf/catkin_ws/src/open_quadtree_mapping/launch/example.launch",
		"/home/bbgf/catkin_ws/src/depthnet/src/DepthFusion/depth_fusion.cu",
		"/home/bbgf/catkin_ws/src/depthnet/src/DepthFusion/depth_fusion.cuh",
		"/home/bbgf/opencv-3.4.5/build/OpenCVConfig.cmake",
		"/home/bbgf/catkin_ws/src/InfiniTAM_ros/CMakeLists.txt",
		"/home/bbgf/catkin_ws/src/depthnet/package.xml",
		"/home/bbgf/catkin_ws/src/sgbm_ros/src/main.cu",
		"/home/bbgf/catkin_ws/src/gpu_convex_planner/CMakeLists.txt",
		"/home/bbgf/catkin_ws/src/InfiniTAM_ros/src/RosWrappedMain.cpp",
		"/home/bbgf/opencv-3.4.5/CMakeLists.txt",
		"/home/bbgf/software/opencv-3.4.5/build/OpenCVConfig.cmake",
		"/home/bbgf/software/opencv-4.0.0/CMakeLists.txt",
		"/home/bbgf/software/opencv-3.4.0/CMakeLists.txt",
		"/home/bbgf/software/opencv-3.4.5/CMakeLists.txt",
		"/home/bbgf/software/opencv-3.4.0/build/OpenCVConfig.cmake",
		"/home/bbgf/.bashrc",
		"/home/bbgf/software/opencv-3.3.0/CMakeLists.txt",
		"/home/bbgf/software/opencv-3.2.0/CMakeLists.txt",
		"/home/bbgf/catkin_ws/src/depthnet/src/CameraPoseVisualization.h",
		"/home/bbgf/catkin_ws/src/depthnet/src/CameraPoseVisualization.cpp",
		"/home/bbgf/catkin_ws/src/InfiniTAM_ros/libs/ITMLib/Utils/ITMLibSettings.h",
		"/home/bbgf/catkin_ws/src/InfiniTAM_ros/libs/ITMLib/Utils/ITMLibSettings.cpp",
		"/home/bbgf/catkin_ws/src/InfiniTAM_ros/libs/ITMLib/Core/ITMBasicEngine.tpp",
		"/home/bbgf/catkin_ws/src/data_set/icl_nuim_wapper/launch/fusion.launch",
		"/home/bbgf/catkin_ws/src/data_set/icl_nuim_wapper/src/main.cpp",
		"/home/bbgf/catkin_ws/src/data_set/icl_nuim_wapper/CMakeLists.txt",
		"/home/bbgf/catkin_ws/src/planner/pcd_trajectory/src/path_finder.cpp",
		"/home/bbgf/catkin_ws/src/InfiniTAM_ros/libs/ITMLib/Core/ITMBasicEngine.h",
		"/home/bbgf/catkin_ws/src/InfiniTAM_ros/libs/ITMLib/Objects/Meshing/ITMMesh.h",
		"/home/bbgf/catkin_ws/src/gpu_convex_planner/src/gpu_convex_demo.cpp",
		"/home/bbgf/catkin_ws/src/InfiniTAM_ros/libs/ITMLib/Objects/Scene/ITMVoxelBlockHash.h",
		"/home/bbgf/catkin_ws/src/InfiniTAM_ros/libs/ITMLib/Objects/Scene/ITMLocalVBA.h",
		"/home/bbgf/catkin_ws/src/djiros/CMakeLists.txt",
		"/home/bbgf/catkin_ws/src/djiros/src/djiros/djifox_node.cpp",
		"/home/bbgf/catkin_ws/src/teach_repeat_planer/src/tr_node.cpp",
		"/home/bbgf/catkin_ws/src/djiros/src/djiros/djiros_node.cpp",
		"/home/bbgf/catkin_ws/src/djiros/src/djiros/DjiRos.cpp",
		"/home/bbgf/catkin_ws/src/InfiniTAM/cmake/Flags.cmake",
		"/home/bbgf/catkin_ws/src/InfiniTAM/cmake/UseCUDA.cmake",
		"/home/bbgf/catkin_ws/src/InfiniTAM/package.xml",
		"/home/bbgf/catkin_ws/src/InfiniTAM/CMakeLists.txt",
		"/home/bbgf/catkin_ws/src/InfiniTAM/src/InfiniTAMCheck.cu",
		"/home/bbgf/catkin_ws/src/time_optimizer/time_optimizer/launch/clean_demo.launch",
		"/home/bbgf/catkin_ws/src/InfiniTAM/launch/depth_input_demo.launch",
		"/home/bbgf/catkin_ws/src/time_optimizer/time_optimizer/src/demo.cpp",
		"/home/bbgf/catkin_ws/src/InfiniTAM/calib.txt",
		"/home/bbgf/catkin_ws/src/InfiniTAM/src/RosWrappedMain.cpp",
		"/home/bbgf/catkin_ws/src/InfiniTAM/cmake/SetCUDAAppTarget.cmake",
		"/home/bbgf/catkin_ws/src/gpu_convex_planner/src/trajectory_generator_osqp.cpp",
		"/home/bbgf/catkin_ws/src/gpu_convex_planner/include/planning/trajectory_generator_osqp.h",
		"/home/bbgf/catkin_ws/src/gpu_convex_planner/src/trajectory_generator_ooqp.cpp",
		"/home/bbgf/catkin_ws/src/gpu_convex_planner/include/planning/trajectory_generator_ooqp.h",
		"/home/bbgf/osqp/CMakeLists.txt",
		"/home/bbgf/osqp-eigen/src/Solver.cpp",
		"/home/bbgf/osqp-eigen/src/Settings.cpp",
		"/home/bbgf/osqp-eigen/example/src/MPCExample.cpp",
		"/home/bbgf/osqp-eigen/include/OsqpEigen.h",
		"/home/bbgf/osqp/lin_sys/direct/CMakeLists.txt",
		"/home/bbgf/osqp/lin_sys/CMakeLists.txt",
		"/home/bbgf/osqp-eigen/include/OsqpEigen/Settings.hpp",
		"/home/bbgf/catkin_ws/src/InfiniTAM/src/CLIEngine.cpp",
		"/home/bbgf/Downloads/cpp/tests/test_c.cpp",
		"/home/bbgf/catkin_ws/src/InfiniTAM/libs/ITMLib/Core/ITMBasicEngine.h",
		"/home/bbgf/osqp-eigen/example/CMakeLists.txt",
		"/home/bbgf/catkin_ws/src/gpu_convex_planner/src/hybrid_a_star.cpp",
		"/home/bbgf/catkin_ws/src/gpu_convex_planner/src/Polyhedron.cpp",
		"/home/bbgf/catkin_ws/src/gpu_convex_planner/src/cluster_engine.cu",
		"/home/bbgf/catkin_ws/src/gpu_convex_planner/src/bezier_base.cpp",
		"/home/bbgf/catkin_ws/src/gpu_convex_planner/src/cluster_server.cu",
		"/home/bbgf/catkin_ws/src/gpu_convex_planner/include/trajectory_generator_osqp.h",
		"/home/bbgf/catkin_ws/src/gpu_convex_planner/src/cluster_engine_cpu.cpp",
		"/home/bbgf/catkin_ws/src/gpu_convex_planner/include/geometry/cluster_server.cuh",
		"/home/bbgf/catkin_ws/src/gpu_convex_planner/include/planning/hybrid_a_star.h",
		"/home/bbgf/catkin_ws/src/gpu_convex_planner/include/trajectory_generator_ooqp.h",
		"/home/bbgf/catkin_ws/src/gpu_convex_planner/include/cluster_engine_cpu.h",
		"/home/bbgf/catkin_ws/src/gpu_convex_planner/launch/gpu_convex.launch",
		"/home/bbgf/catkin_ws/src/gpu_convex_planner/launch/map.launch",
		"/home/bbgf/catkin_ws/src/gpu_convex_planner/package.xml",
		"/home/bbgf/catkin_ws/src/gpu_convex_planner/include/cluster_server.cuh",
		"/home/bbgf/catkin_ws/src/gpu_convex_planner/include/cluster_engine.cuh",
		"/home/bbgf/catkin_ws/src/gpu_convex_planner/src/cluster_engine.cuh",
		"/home/bbgf/catkin_ws/src/gpu_convex_planner/include/convex_cluster.cuh",
		"/home/bbgf/catkin_ws/src/gpu_convex_planner/src/convex_cluster.cu",
		"/home/bbgf/catkin_ws/src/gpu_convex_planner/src/infinitam_ros_node.cpp",
		"/home/bbgf/catkin_ws/src/gpu_convex_planner/infiniTAM/Engine/RosImageSourceEngine.cpp",
		"/home/bbgf/catkin_ws/src/gpu_convex_planner/infiniTAM/Engine/RosImageSourceEngine.h",
		"/home/bbgf/tsdf-fusion/demo.cu",
		"/home/bbgf/catkin_ws/src/gpu_convex_planner/infiniTAM/Engine/CMakeLists.txt",
		"/home/bbgf/catkin_ws/src/gpu_convex_planner/infiniTAM/Utils/CMakeLists.txt",
		"/home/bbgf/catkin_ws/src/gpu_convex_planner/infiniTAM/ITMLib/CMakeLists.txt",
		"/home/bbgf/Desktop/infinitam/InfiniTAM/infinitam_ros_node.cpp",
		"/home/bbgf/Desktop/infinitam/InfiniTAM/CMakeLists.txt",
		"/home/bbgf/catkin_ws/src/gpu_convex_planner/infiniTAM/Engine/RosPoseSourceEngine.h",
		"/home/bbgf/catkin_ws/src/gpu_convex_planner/infiniTAM/Engine/RosPoseSourceEngine.cpp",
		"/home/bbgf/catkin_ws/src/gpu_convex_planner/include/data_type.h",
		"/home/bbgf/catkin_ws/src/gpu_fusion/CMakeLists.txt",
		"/home/bbgf/catkin_ws/src/gpu_fusion/package.xml",
		"/home/bbgf/Desktop/infinitam/InfiniTAM/package.xml",
		"/home/bbgf/catkin_ws/src/open_quadtree_mapping/src/publisher.cpp",
		"/home/bbgf/InfiniTAM/InfiniTAM/build/Makefile",
		"/home/bbgf/catkin_ws/src/infinitam/InfiniTAM/Engine/CMakeLists.txt",
		"/home/bbgf/catkin_ws/src/infinitam/InfiniTAM/package.xml"
	],
	"find":
	{
		"height": 28.0
	},
	"find_in_files":
	{
		"height": 123.0,
		"where_history":
		[
			"/home/bbgf/catkin_ws/src/depthnet",
			"/home/bbgf/catkin_ws/src/depthnet/src",
			"/home/bbgf/catkin_ws/src/InfiniTAM_ros",
			"/home/bbgf/catkin_ws/src/InfiniTAM_ros/src",
			"<current file>,<open files>",
			"",
			"<current file>,<open files>",
			"<current file>",
			""
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"Factorial",
			"readRGBDCalib",
			"calibFile",
			"gpu_convex_demo",
			"depth",
			"imageQueue",
			"_rotation",
			"rectify",
			"poseStampedCallback",
			"scale_",
			"publish_pointcloud",
			"PyObject_CallMethod",
			"get_income_depth",
			"aaa",
			"get_income_depth",
			"loading model done",
			"catkin_ws",
			"PyImport_ImportModule",
			"py_module",
			"py_model",
			"image_input",
			"msg_callback",
			"exact_image_pose_policy",
			"frame_manager",
			"msg_callback",
			"image_input",
			"msg_callback",
			"image_encodings",
			"toImageMsg",
			"cv_bridge",
			"ImageData",
			"income_data",
			"toImageMsg",
			"cv_bridge",
			"publish_reference",
			"cv_bridge",
			"img_color",
			"color_image",
			"matFromImage",
			"cv_img_ptr",
			"toCvShare",
			"cv_bridge",
			"transport_util",
			"publish_reference",
			"cv_bridge",
			"OpenCV_INCLUDE_DIRS",
			"OpenCV_LINK_DIRS",
			"exception",
			"cv_bridge",
			"OpenCV_LIBS",
			"OpenCV_LIBRARIES",
			"OpenCV_LIBS",
			"throw_no_cuda",
			"codec",
			"cudacodec",
			"WITH_NVCUVID",
			"WITH_CUDA",
			"with_cuda",
			"NVCUVID",
			"WITH_CUDA",
			"cudev",
			"HAVE_OPENCV_CUDEV",
			"WITH_CUDA",
			"last_pose",
			"input_pose",
			"input_frame",
			"last_pose",
			"input_frame",
			"last_pose",
			"input_pose",
			"input_frame",
			"WITH_CUDA",
			"cuda",
			"CUDA",
			"codec",
			"cuda",
			"cudacodec",
			"WITH_CUDA",
			"_rotation",
			"visualizeVoxel",
			"visualize_voxel",
			"visualize_mesh",
			"getAllVoxelsInThreshold",
			"vp",
			"getAllVoxelsInThreshold",
			"visualizeMesh",
			"world",
			"read_poselist",
			"file_dir",
			"sceneParams",
			"maxW",
			"ITMLibSettings",
			"detach",
			"getTriangleMeshPoints",
			"visualizeMesh",
			"visualize_mesh",
			"getTriangleMeshPoints",
			"visualizeMesh",
			"visualize_mesh",
			"save",
			"getAllVoxelsInThreshold",
			"visualize_mesh",
			"visualizeMesh",
			"save",
			"Vector2Point",
			"_pub_mesh_vis",
			"_subDepthImage",
			"_mu",
			"save",
			"string",
			"cnt",
			"save",
			"cv_rgb_image_",
			"_cv_rgb_image",
			"cv_rgb_image_",
			"mainEngine",
			"count",
			"_rotation",
			"q",
			"t",
			"mainEngine",
			"t",
			"_pkg_path",
			"CUDA",
			"set",
			"frame",
			"tt",
			"error_code_1"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
			"_max_z_id",
			"_max_yz_id",
			"cudaMemcpy",
			"USE_GPU_STAGE_1",
			"_map_z_size",
			"_map_yz_size",
			"ZERO_EPISLON",
			"index2Coord",
			"MatrixXd",
			"VectorXd",
			"Vector3d",
			"double",
			"Vector3d",
			"VectorXd",
			"Vector3d",
			"MatrixXd",
			"double",
			"Vector4d",
			"MatrixXd",
			"VectorXd",
			"Vector3d",
			"double",
			"VectorXf",
			"MatrixXf",
			"VectorXf",
			"MatrixXf",
			"float",
			"MatrixXf",
			"Vector4f",
			"float",
			"Vector3f",
			"VectorXf",
			"MatrixXf",
			"VectorXf",
			"Vector3f",
			"VectorXf",
			"Vector3f",
			"float",
			"active_xyz_id",
			"_candidate_buffer_size",
			"_cluster_buffer_size",
			"invalid_data",
			"uint8_t",
			"_",
			"grad_traj_opti",
			"_time_s",
			"_time_acc",
			"_",
			"_time_allocator_best",
			"_time_allocator",
			"_path",
			"_seg_num",
			"_time_optimizer",
			"_path_finder",
			"_time_allocator",
			"_traj_time_start",
			"path_finder",
			"[k]",
			"30.0",
			"world",
			"_vis_traj",
			"1100",
			"1000",
			"900",
			"800",
			"700",
			"500",
			"400",
			"300",
			"200",
			"100",
			"1100",
			"1000",
			"900",
			"800",
			"700",
			"600",
			"500",
			"300",
			"200",
			"100",
			"600",
			"400",
			"rrtPathPlaner",
			"600",
			"1100",
			"1000",
			"900",
			"800",
			"700",
			"600",
			"500",
			"0.0",
			"0.5",
			"0.0",
			"0.5",
			"300",
			"200",
			"100",
			"900",
			"800",
			"700",
			"rrgDataStruct",
			"fuck::Point",
			"fuck",
			"fuck::Point",
			"fuck::NodePtr",
			"double",
			"float",
			"pathPlaner->",
			"insertBlock"
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 3,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "/home/bbgf/catkin_ws/src/gpu_convex_planner/src/gpu_convex_demo.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 68899,
						"regions":
						{
						},
						"selection":
						[
							[
								134,
								134
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 57.0,
						"zoom_level": 1.0
					},
					"stack_index": 4,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "/home/bbgf/catkin_ws/src/gpu_convex_planner/include/planning/hybrid_a_star.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 7312,
						"regions":
						{
						},
						"selection":
						[
							[
								106,
								106
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 5,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "/home/bbgf/catkin_ws/src/gpu_convex_planner/src/cluster_engine_cpu.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3996,
						"regions":
						{
						},
						"selection":
						[
							[
								435,
								435
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "src/RosWrappedMain.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 12489,
						"regions":
						{
						},
						"selection":
						[
							[
								9906,
								9906
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 4066.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "launch/depth_input_demo.launch",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 723,
						"regions":
						{
						},
						"selection":
						[
							[
								565,
								565
							]
						],
						"settings":
						{
							"syntax": "Packages/XML/XML.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				},
				{
					"buffer": 5,
					"file": "calib.txt",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 325,
						"regions":
						{
						},
						"selection":
						[
							[
								7,
								7
							]
						],
						"settings":
						{
							"syntax": "Packages/CMake/CMake.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"type": "text"
				},
				{
					"buffer": 6,
					"file": "/home/bbgf/catkin_ws/src/sgbm_ros/src/sgbm_ros.cu",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 10009,
						"regions":
						{
						},
						"selection":
						[
							[
								8244,
								8244
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 4862.0,
						"zoom_level": 1.0
					},
					"stack_index": 6,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 28.0
	},
	"input":
	{
		"height": 43.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.find_results":
	{
		"height": 0.0
	},
	"output.unsaved_changes":
	{
		"height": 150.0
	},
	"pinned_build_system": "",
	"project": "infiniTAM_ros.sublime-project",
	"replace":
	{
		"height": 52.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"iarcfsm.cpp",
				"iarc/iarc/src/task/IARCFSM.cpp"
			],
			[
				"trajeccmake",
				"src/trajectory_generator/CMakeLists.txt"
			],
			[
				"trajecmakelist",
				"src/trajectory_generator/CMakeLists.txt"
			],
			[
				"trajectonode",
				"src/trajectory_generator/src/trajectory_generator_node.cpp"
			],
			[
				"sim.launch",
				"src/iarc/iarc/launch/sim.launch"
			],
			[
				"",
				"voxel_trajectory/src/grid_trajectory_generator_node.cpp"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 500.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"",
				"~/catkin_ws/src/pcd_trajectory/src/pcd_trajectory.sublime-project"
			]
		],
		"width": 380.0
	},
	"select_symbol":
	{
		"height": 392.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 431.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 361.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
